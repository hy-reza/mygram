openapi: 3.0.0
info:
  title: MyGram API
  description: >-
    MyGram adalah aplikasi yang memungkinkan pengguna untuk menyimpan foto dan membuat komentar pada foto orang lain. Aplikasi ini dilengkapi dengan proses CRUD pada tabel dan alur yang dijelaskan di bawah ini. Autentikasi diperlukan untuk mengakses data pada tabel SocialMedia, Photo, dan Comment menggunakan JsonWebToken. Proses otorisasi diperlukan untuk memodifikasi data kepemilikan seperti update atau delete.


    ## Endpoints


    ### Authentication


    | Method | Endpoint | Description |

    | --- | --- | --- |

    | POST | `/api/v1/authentication/register` | Register a new user |

    | POST | `/api/v1/authentication/login` | Login and retrieve access token |


    ### Users


    | Method | Endpoint | Description |

    | --- | --- | --- |

    | GET | `/api/v1/users/list` | Get a list of users |


    ### Photos


    | Method | Endpoint | Description |

    | --- | --- | --- |

    | POST | `/api/v1/photos/` | Create a new photo |

    | GET | `/api/v1/photos/` | Get a list of photos |

    | GET | `/api/v1/photos/:id` | Get a specific photo |

    | PUT | `/api/v1/photos/:id` | Update a specific photo |

    | DELETE | `/api/v1/photos/:id` | Delete a specific photo |


    ### Comments


    | Method | Endpoint | Description |

    | --- | --- | --- |

    | POST | `/api/v1/comments/` | Create a new comment |

    | GET | `/api/v1/comments/` | Get a list of comments |

    | GET | `/api/v1/comments/:id` | Get a specific comment |

    | PUT | `/api/v1/comments/:id` | Update a specific comment |

    | DELETE | `/api/v1/comments/:id` | Delete a specific comment |


    ### Media


    | Method | Endpoint | Description |

    | --- | --- | --- |

    | POST | `/api/v1/media/` | Create a new media |

    | GET | `/api/v1/media/` | Get a list of media |

    | GET | `/api/v1/media/:id` | Get a specific media |

    | PUT | `/api/v1/media/:id` | Update a specific media |

    | DELETE | `/api/v1/media/:id` | Delete a specific media |


    ## Dokumentasi Akses


    - Swagger: [https://mygram-api-production-09d0.up.railway.app/swagger/index.html#/](https://mygram-api-production-09d0.up.railway.app/swagger/index.html#/)

    - Postman: [https://documenter.getpostman.com/view/15041975/2s93Xx1k31](https://documenter.getpostman.com/view/15041975/2s93Xx1k31)
  contact: {}
  version: '1.0'
servers:
- url: https://mygram-api-production-09d0.up.railway.app/api/v1
  variables: {}
- url: http://localhost:8888/api/v1/media
  variables: {}
paths:
  /authentication/register:
    post:
      tags:
      - Auth
      summary: Register
      operationId: Register
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RegisterRequest'
              - example:
                  username: hyrezaalf
                  email: hyrezaalf@gmail.com
                  password: rahasia
                  age: 22
            example:
              username: hyrezaalf
              email: hyrezaalf@gmail.com
              password: rahasia
              age: 22
        required: true
      responses:
        '200':
          description: OK
          headers:
            content-type:
              content:
                text/plain:
                  schema:
                    type: string
                  example: application/json; charset=utf-8
            date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Sat, 15 Apr 2023 00:52:55 GMT
            content-length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '272'
            server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: railway
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/RegisterSuccess'
                - example:
                    code: 200
                    status: Ok
                    message: Successfully created user!
                    data:
                      id: d6391d94-19fa-4c61-87fa-f6e46cae9e27
                      username: hyrezaalf
                      email: hyrezaalf@gmail.com
                      age: 22
                      created_at: 2023-04-15T00:52:55.311075394Z
                      updated_at: 2023-04-15T00:52:55.311075394Z
              example:
                code: 200
                status: Ok
                message: Successfully created user!
                data:
                  id: d6391d94-19fa-4c61-87fa-f6e46cae9e27
                  username: hyrezaalf
                  email: hyrezaalf@gmail.com
                  age: 22
                  created_at: 2023-04-15T00:52:55.311075394Z
                  updated_at: 2023-04-15T00:52:55.311075394Z
        '400':
          description: Bad Request
          headers:
            content-type:
              content:
                text/plain:
                  schema:
                    type: string
                  example: application/json; charset=utf-8
            date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Sat, 15 Apr 2023 00:53:26 GMT
            content-length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '203'
            server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: railway
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/RegisterFailed1'
                - example:
                    code: 400
                    status: Error
                    message: Registration Failed!
                    errors:
                    - "ERROR: Invalid Password (Key: 'CreateUserRequest.Password' Error:Field validation for 'Password' failed on the 'required' tag)!"
              example:
                code: 400
                status: Error
                message: Registration Failed!
                errors:
                - "ERROR: Invalid Password (Key: 'CreateUserRequest.Password' Error:Field validation for 'Password' failed on the 'required' tag)!"
      deprecated: false
      servers:
      - url: https://mygram-api-production-09d0.up.railway.app/api/v1
        variables: {}
  /authentication/login:
    post:
      tags:
      - Auth
      summary: Login
      operationId: Login
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/LoginRequest'
              - example:
                  username: hyrezaalf
                  password: rahasia
            example:
              username: hyrezaalf
              password: rahasia
        required: true
      responses:
        '200':
          description: OK
          headers:
            content-type:
              content:
                text/plain:
                  schema:
                    type: string
                  example: application/json; charset=utf-8
            date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Sat, 15 Apr 2023 00:54:50 GMT
            content-length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '312'
            server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: railway
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/LoginSuccess'
                - example:
                    code: 200
                    status: Ok
                    message: Successfully log in!
                    data:
                      token_type: Bearer
                      token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODE1MjM2OTAsImlhdCI6MTY4MTUyMDA5MCwibmJmIjoxNjgxNTIwMDkwLCJzdWIiOiJkNjM5MWQ5NC0xOWZhLTRjNjEtODdmYS1mNmU0NmNhZTllMjcifQ.C24mO1kCjeGtkVF0NbXPZUaEtMm2KfSQQCIufnZj5JQ
              example:
                code: 200
                status: Ok
                message: Successfully log in!
                data:
                  token_type: Bearer
                  token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODE1MjM2OTAsImlhdCI6MTY4MTUyMDA5MCwibmJmIjoxNjgxNTIwMDkwLCJzdWIiOiJkNjM5MWQ5NC0xOWZhLTRjNjEtODdmYS1mNmU0NmNhZTllMjcifQ.C24mO1kCjeGtkVF0NbXPZUaEtMm2KfSQQCIufnZj5JQ
        '400':
          description: Bad Request
          headers:
            content-type:
              content:
                text/plain:
                  schema:
                    type: string
                  example: application/json; charset=utf-8
            date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Sat, 15 Apr 2023 00:55:14 GMT
            content-length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '76'
            server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: railway
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/LoginFailed1'
                - example:
                    code: 400
                    status: Bad Request
                    message: Invalid username or password
              example:
                code: 400
                status: Bad Request
                message: Invalid username or password
      deprecated: false
      servers:
      - url: https://mygram-api-production-09d0.up.railway.app/api/v1
        variables: {}
  /users/list:
    get:
      tags:
      - Auth
      summary: Get Users
      operationId: GetUsers
      parameters: []
      responses:
        '200':
          description: OK
          headers:
            content-type:
              content:
                text/plain:
                  schema:
                    type: string
                  example: application/json; charset=utf-8
            date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Sat, 15 Apr 2023 00:57:02 GMT
            content-length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '275'
            server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: railway
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/GetUsersSuccess'
                - example:
                    code: 200
                    status: Ok
                    message: Successfully fetch all user data!
                    data:
                    - id: d6391d94-19fa-4c61-87fa-f6e46cae9e27
                      username: hyrezaalf
                      email: hyrezaalf@gmail.com
                      age: 22
                      created_at: 2023-04-15T00:52:55.311075Z
                      updated_at: 2023-04-15T00:52:55.311075Z
              example:
                code: 200
                status: Ok
                message: Successfully fetch all user data!
                data:
                - id: d6391d94-19fa-4c61-87fa-f6e46cae9e27
                  username: hyrezaalf
                  email: hyrezaalf@gmail.com
                  age: 22
                  created_at: 2023-04-15T00:52:55.311075Z
                  updated_at: 2023-04-15T00:52:55.311075Z
      deprecated: false
      security:
      - bearer: []
      servers:
      - url: https://mygram-api-production-09d0.up.railway.app/api/v1
        variables: {}
  /photos:
    post:
      tags:
      - Photo
      summary: Create Photo
      operationId: CreatePhoto
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreatePhotoRequest'
              - example:
                  title: Photo Reza 21
                  caption: New Photo23as
                  photo_url: New Photo Url23
            example:
              title: Photo Reza 21
              caption: New Photo23as
              photo_url: New Photo Url23
        required: true
      responses:
        '401':
          description: Unauthorized
          headers:
            content-type:
              content:
                text/plain:
                  schema:
                    type: string
                  example: application/json; charset=utf-8
            date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Sat, 15 Apr 2023 00:58:35 GMT
            content-length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '64'
            server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: railway
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/CreatePhotoUnauthorized1'
                - example:
                    message: 'invalidate token: Token is expired'
                    status: fail
              example:
                message: 'invalidate token: Token is expired'
                status: fail
        '200':
          description: OK
          headers:
            content-type:
              content:
                text/plain:
                  schema:
                    type: string
                  example: application/json; charset=utf-8
            date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Sat, 15 Apr 2023 00:59:25 GMT
            content-length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '347'
            server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: railway
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/CreatePhotoSuccess'
                - example:
                    code: 200
                    status: Ok
                    message: Successfully upload photo!
                    data:
                      ID: 58754883-325c-4a2e-80b8-2d9fa6f51026
                      title: Photo Reza 1
                      caption: New Photo23
                      photo_url: New Photo Url23
                      UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
                      comments: null
                      CreatedAt: 2023-04-15T00:59:25.21253817Z
                      UpdatedAt: 2023-04-15T00:59:25.21253817Z
              example:
                code: 200
                status: Ok
                message: Successfully upload photo!
                data:
                  ID: 58754883-325c-4a2e-80b8-2d9fa6f51026
                  title: Photo Reza 1
                  caption: New Photo23
                  photo_url: New Photo Url23
                  UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
                  comments: null
                  CreatedAt: 2023-04-15T00:59:25.21253817Z
                  UpdatedAt: 2023-04-15T00:59:25.21253817Z
        '400':
          description: Bad Request
          headers:
            content-type:
              content:
                text/plain:
                  schema:
                    type: string
                  example: application/json; charset=utf-8
            date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Sat, 15 Apr 2023 01:02:59 GMT
            content-length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '195'
            server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: railway
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FailedRequiredField1'
                - example:
                    code: 400
                    status: Error
                    message: Upload Photo Failed!
                    errors:
                    - "ERROR: Invalid Title (Key: 'CreatePhotoRequest.Title' Error:Field validation for 'Title' failed on the 'required' tag)!"
              example:
                code: 400
                status: Error
                message: Upload Photo Failed!
                errors:
                - "ERROR: Invalid Title (Key: 'CreatePhotoRequest.Title' Error:Field validation for 'Title' failed on the 'required' tag)!"
      deprecated: false
      security:
      - bearer: []
      servers:
      - url: https://mygram-api-production-09d0.up.railway.app/api/v1
        variables: {}
    get:
      tags:
      - Photo
      summary: Get All
      operationId: GetAll
      parameters: []
      responses:
        '200':
          description: OK
          headers:
            content-type:
              content:
                text/plain:
                  schema:
                    type: string
                  example: application/json; charset=utf-8
            date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Sat, 15 Apr 2023 01:00:10 GMT
            content-length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '352'
            server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: railway
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/GetAllSuccess'
                - example:
                    code: 200
                    status: Ok
                    message: Successfully fetch all photos data!
                    data:
                    - ID: 58754883-325c-4a2e-80b8-2d9fa6f51026
                      title: Photo Reza 1
                      caption: New Photo23
                      photo_url: New Photo Url23
                      UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
                      comments: []
                      CreatedAt: 2023-04-15T00:59:25.212538Z
                      UpdatedAt: 2023-04-15T00:59:25.212538Z
              example:
                code: 200
                status: Ok
                message: Successfully fetch all photos data!
                data:
                - ID: 58754883-325c-4a2e-80b8-2d9fa6f51026
                  title: Photo Reza 1
                  caption: New Photo23
                  photo_url: New Photo Url23
                  UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
                  comments: []
                  CreatedAt: 2023-04-15T00:59:25.212538Z
                  UpdatedAt: 2023-04-15T00:59:25.212538Z
      deprecated: false
      security:
      - bearer: []
      servers:
      - url: https://mygram-api-production-09d0.up.railway.app/api/v1
        variables: {}
  /photos/{id}:
    get:
      tags:
      - Photo
      summary: Get One
      operationId: GetOne
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: 58754883-325c-4a2e-80b8-2d9fa6f510212
      responses:
        '200':
          description: OK
          headers:
            content-type:
              content:
                text/plain:
                  schema:
                    type: string
                  example: application/json; charset=utf-8
            date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Sat, 15 Apr 2023 01:01:35 GMT
            content-length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '345'
            server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: railway
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/GetOneSuccess'
                - example:
                    code: 200
                    status: Ok
                    message: Successfully fetch photo data!
                    data:
                      ID: 58754883-325c-4a2e-80b8-2d9fa6f51026
                      title: Photo Reza 1
                      caption: New Photo23
                      photo_url: New Photo Url23
                      UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
                      comments: []
                      CreatedAt: 2023-04-15T00:59:25.212538Z
                      UpdatedAt: 2023-04-15T00:59:25.212538Z
              example:
                code: 200
                status: Ok
                message: Successfully fetch photo data!
                data:
                  ID: 58754883-325c-4a2e-80b8-2d9fa6f51026
                  title: Photo Reza 1
                  caption: New Photo23
                  photo_url: New Photo Url23
                  UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
                  comments: []
                  CreatedAt: 2023-04-15T00:59:25.212538Z
                  UpdatedAt: 2023-04-15T00:59:25.212538Z
        '400':
          description: Bad Request
          headers:
            content-type:
              content:
                text/plain:
                  schema:
                    type: string
                  example: application/json; charset=utf-8
            date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Sat, 15 Apr 2023 01:02:06 GMT
            content-length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '179'
            server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: railway
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/GetPhotoFailed1'
                - example:
                    code: 400
                    status: Bad Request
                    message: photos not found
                    errors:
                    - 'ERROR: invalid input syntax for type uuid: "58754883-325c-4a2e-80b8-2d9fa6f510212" (SQLSTATE 22P02)'
              example:
                code: 400
                status: Bad Request
                message: photos not found
                errors:
                - 'ERROR: invalid input syntax for type uuid: "58754883-325c-4a2e-80b8-2d9fa6f510212" (SQLSTATE 22P02)'
      deprecated: false
      security:
      - bearer: []
      servers:
      - url: https://mygram-api-production-09d0.up.railway.app/api/v1
        variables: {}
    put:
      tags:
      - Photo
      summary: Update Photo
      operationId: UpdatePhoto
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: 58754883-325c-4a2e-80b8-2d9fa6f51026
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdatePhotoRequest'
              - example:
                  caption: caption kok ilang
                  photo_url: New Photo Url23 updated
            example:
              caption: caption kok ilang
              photo_url: New Photo Url23 updated
        required: true
      responses:
        '200':
          description: OK
          headers:
            content-type:
              content:
                text/plain:
                  schema:
                    type: string
                  example: application/json; charset=utf-8
            date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Sat, 15 Apr 2023 01:04:34 GMT
            content-length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '369'
            server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: railway
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/UpdatePhotoSuccess'
                - example:
                    code: 200
                    status: Ok
                    message: Successfully updated photo!
                    data:
                      ID: 58754883-325c-4a2e-80b8-2d9fa6f51026
                      title: New Photo23 updated v2
                      caption: caption kok ilang
                      photo_url: New Photo Url23 updated
                      UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
                      comments: []
                      CreatedAt: 2023-04-15T00:59:25.212538Z
                      UpdatedAt: 2023-04-15T01:04:34.492954426Z
              example:
                code: 200
                status: Ok
                message: Successfully updated photo!
                data:
                  ID: 58754883-325c-4a2e-80b8-2d9fa6f51026
                  title: New Photo23 updated v2
                  caption: caption kok ilang
                  photo_url: New Photo Url23 updated
                  UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
                  comments: []
                  CreatedAt: 2023-04-15T00:59:25.212538Z
                  UpdatedAt: 2023-04-15T01:04:34.492954426Z
        '400':
          description: Bad Request
          headers:
            content-type:
              content:
                text/plain:
                  schema:
                    type: string
                  example: application/json; charset=utf-8
            date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Sat, 15 Apr 2023 01:05:08 GMT
            content-length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '195'
            server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: railway
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/UpdatePhotoRequiredField1'
                - example:
                    code: 400
                    status: Error
                    message: Update Photo Failed!
                    errors:
                    - "ERROR: Invalid Title (Key: 'UpdatePhotoRequest.Title' Error:Field validation for 'Title' failed on the 'required' tag)!"
              example:
                code: 400
                status: Error
                message: Update Photo Failed!
                errors:
                - "ERROR: Invalid Title (Key: 'UpdatePhotoRequest.Title' Error:Field validation for 'Title' failed on the 'required' tag)!"
      deprecated: false
      security:
      - bearer: []
      servers:
      - url: https://mygram-api-production-09d0.up.railway.app/api/v1
        variables: {}
    delete:
      tags:
      - Photo
      summary: Delete Photo
      operationId: DeletePhoto
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: 58754883-325c-4a2e-80b8-2d9fa6f51026
      responses:
        '403':
          description: Forbidden
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Fri, 14 Apr 2023 23:42:02 GMT
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '89'
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeleteFailedAccessDenied1'
                - example:
                    message: 'Access Denied: You are not authorized to modify this data !'
                    status: fail
              example:
                message: 'Access Denied: You are not authorized to modify this data !'
                status: fail
        '200':
          description: OK
          headers:
            content-type:
              content:
                text/plain:
                  schema:
                    type: string
                  example: application/json; charset=utf-8
            date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Sat, 15 Apr 2023 01:07:09 GMT
            content-length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '66'
            server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: railway
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeleteSuccess'
                - example:
                    code: 200
                    status: Ok
                    message: Successfully deleted photo!
              example:
                code: 200
                status: Ok
                message: Successfully deleted photo!
      deprecated: false
      security:
      - bearer: []
      servers:
      - url: https://mygram-api-production-09d0.up.railway.app/api/v1
        variables: {}
  /comments:
    post:
      tags:
      - Comment
      summary: Create Comment
      operationId: CreateComment
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateCommentRequest'
              - example:
                  photo_id: 9be2d12f-587c-4710-b5ce-e72eef4b2d08
            example:
              photo_id: 9be2d12f-587c-4710-b5ce-e72eef4b2d08
        required: true
      responses:
        '200':
          description: OK
          headers:
            content-type:
              content:
                text/plain:
                  schema:
                    type: string
                  example: application/json; charset=utf-8
            date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Sat, 15 Apr 2023 01:08:30 GMT
            content-length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '331'
            server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: railway
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/CreateCommentSuccess'
                - example:
                    code: 200
                    status: Ok
                    message: Successfully created comment!
                    data:
                      ID: 8b7a676d-02c8-4317-81a3-d0354673404d
                      UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
                      PhotoID: 9be2d12f-587c-4710-b5ce-e72eef4b2d08
                      message: Mantap bro
                      CreatedAt: 2023-04-15T01:08:30.733654355Z
                      UpdatedAt: 2023-04-15T01:08:30.733654355Z
              example:
                code: 200
                status: Ok
                message: Successfully created comment!
                data:
                  ID: 8b7a676d-02c8-4317-81a3-d0354673404d
                  UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
                  PhotoID: 9be2d12f-587c-4710-b5ce-e72eef4b2d08
                  message: Mantap bro
                  CreatedAt: 2023-04-15T01:08:30.733654355Z
                  UpdatedAt: 2023-04-15T01:08:30.733654355Z
        '400':
          description: Bad Request
          headers:
            content-type:
              content:
                text/plain:
                  schema:
                    type: string
                  example: application/json; charset=utf-8
            date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Sat, 15 Apr 2023 01:08:50 GMT
            content-length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '328'
            server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: railway
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/CreateCommentFailedRequireField1'
                - example:
                    code: 400
                    status: Error
                    message: Comment Failed!
                    errors:
                    - "ERROR: Invalid PhotoId (Key: 'CreateCommentRequest.PhotoId' Error:Field validation for 'PhotoId' failed on the 'required' tag)!"
                    - "ERROR: Invalid Message (Key: 'CreateCommentRequest.Message' Error:Field validation for 'Message' failed on the 'required' tag)!"
              example:
                code: 400
                status: Error
                message: Comment Failed!
                errors:
                - "ERROR: Invalid PhotoId (Key: 'CreateCommentRequest.PhotoId' Error:Field validation for 'PhotoId' failed on the 'required' tag)!"
                - "ERROR: Invalid Message (Key: 'CreateCommentRequest.Message' Error:Field validation for 'Message' failed on the 'required' tag)!"
      deprecated: false
      security:
      - bearer: []
      servers:
      - url: https://mygram-api-production-09d0.up.railway.app/api/v1
        variables: {}
    get:
      tags:
      - Comment
      summary: Get All
      operationId: GetAll1
      parameters: []
      responses:
        '200':
          description: OK
          headers:
            content-type:
              content:
                text/plain:
                  schema:
                    type: string
                  example: application/json; charset=utf-8
            date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Sat, 15 Apr 2023 01:09:43 GMT
            content-length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '328'
            server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: railway
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/GetAllSuccess1'
                - example:
                    code: 200
                    status: Ok
                    message: Successfully fetched comments!
                    data:
                    - ID: 8b7a676d-02c8-4317-81a3-d0354673404d
                      UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
                      PhotoID: 9be2d12f-587c-4710-b5ce-e72eef4b2d08
                      message: Mantap bro
                      CreatedAt: 2023-04-15T01:08:30.733654Z
                      UpdatedAt: 2023-04-15T01:08:30.733654Z
              example:
                code: 200
                status: Ok
                message: Successfully fetched comments!
                data:
                - ID: 8b7a676d-02c8-4317-81a3-d0354673404d
                  UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
                  PhotoID: 9be2d12f-587c-4710-b5ce-e72eef4b2d08
                  message: Mantap bro
                  CreatedAt: 2023-04-15T01:08:30.733654Z
                  UpdatedAt: 2023-04-15T01:08:30.733654Z
      deprecated: false
      security:
      - bearer: []
      servers:
      - url: https://mygram-api-production-09d0.up.railway.app/api/v1
        variables: {}
  /comments/{id}:
    get:
      tags:
      - Comment
      summary: Get One
      operationId: GetOne1
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: 8b7a676d-02c8-4317-81a3-d0354673404a
      responses:
        '200':
          description: OK
          headers:
            content-type:
              content:
                text/plain:
                  schema:
                    type: string
                  example: application/json; charset=utf-8
            date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Sat, 15 Apr 2023 01:10:43 GMT
            content-length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '325'
            server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: railway
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/GetOneSuccess1'
                - example:
                    code: 200
                    status: Ok
                    message: Successfully fetched comment!
                    data:
                      ID: 8b7a676d-02c8-4317-81a3-d0354673404d
                      UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
                      PhotoID: 9be2d12f-587c-4710-b5ce-e72eef4b2d08
                      message: Mantap bro
                      CreatedAt: 2023-04-15T01:08:30.733654Z
                      UpdatedAt: 2023-04-15T01:08:30.733654Z
              example:
                code: 200
                status: Ok
                message: Successfully fetched comment!
                data:
                  ID: 8b7a676d-02c8-4317-81a3-d0354673404d
                  UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
                  PhotoID: 9be2d12f-587c-4710-b5ce-e72eef4b2d08
                  message: Mantap bro
                  CreatedAt: 2023-04-15T01:08:30.733654Z
                  UpdatedAt: 2023-04-15T01:08:30.733654Z
        '404':
          description: Not Found
          headers:
            content-type:
              content:
                text/plain:
                  schema:
                    type: string
                  example: application/json; charset=utf-8
            date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Sat, 15 Apr 2023 01:11:12 GMT
            content-length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '95'
            server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: railway
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/NotFound1'
                - example:
                    code: 404
                    status: Not Found
                    message: Comment not found!
                    errors:
                    - comment not found
              example:
                code: 404
                status: Not Found
                message: Comment not found!
                errors:
                - comment not found
      deprecated: false
      security:
      - bearer: []
      servers:
      - url: https://mygram-api-production-09d0.up.railway.app/api/v1
        variables: {}
    put:
      tags:
      - Comment
      summary: Update Comment
      operationId: UpdateComment
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: 8b7a676d-02c8-4317-81a3-d0354673404d
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateCommentRequest'
              - example:
                  message: Keren cuy lanjutkan :)
            example:
              message: Keren cuy lanjutkan :)
        required: true
      responses:
        '403':
          description: Forbidden
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Fri, 14 Apr 2023 23:51:05 GMT
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '89'
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                - $ref: '#/components/schemas/AccessDenied1'
                - example:
                    message: 'Access Denied: You are not authorized to modify this data !'
                    status: fail
              example:
                message: 'Access Denied: You are not authorized to modify this data !'
                status: fail
        '200':
          description: OK
          headers:
            content-type:
              content:
                text/plain:
                  schema:
                    type: string
                  example: application/json; charset=utf-8
            date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Sat, 15 Apr 2023 01:12:41 GMT
            content-length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '340'
            server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: railway
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/UpdateCommentSuccess'
                - example:
                    code: 200
                    status: Ok
                    message: Successfully updated comment!
                    data:
                      ID: 8b7a676d-02c8-4317-81a3-d0354673404d
                      UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
                      PhotoID: 9be2d12f-587c-4710-b5ce-e72eef4b2d08
                      message: Keren cuy lanjutkan :)
                      CreatedAt: 2023-04-15T01:08:30.733654Z
                      UpdatedAt: 2023-04-15T01:12:41.597429246Z
              example:
                code: 200
                status: Ok
                message: Successfully updated comment!
                data:
                  ID: 8b7a676d-02c8-4317-81a3-d0354673404d
                  UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
                  PhotoID: 9be2d12f-587c-4710-b5ce-e72eef4b2d08
                  message: Keren cuy lanjutkan :)
                  CreatedAt: 2023-04-15T01:08:30.733654Z
                  UpdatedAt: 2023-04-15T01:12:41.597429246Z
      deprecated: false
      security:
      - bearer: []
      servers:
      - url: https://mygram-api-production-09d0.up.railway.app/api/v1
        variables: {}
    delete:
      tags:
      - Comment
      summary: Delete Comment
      operationId: DeleteComment
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: 8b7a676d-02c8-4317-81a3-d0354673404d
      responses:
        '403':
          description: Forbidden
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Fri, 14 Apr 2023 23:51:30 GMT
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '89'
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                - $ref: '#/components/schemas/AccessDenied1'
                - example:
                    message: 'Access Denied: You are not authorized to modify this data !'
                    status: fail
              example:
                message: 'Access Denied: You are not authorized to modify this data !'
                status: fail
        '200':
          description: OK
          headers:
            content-type:
              content:
                text/plain:
                  schema:
                    type: string
                  example: application/json; charset=utf-8
            date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Sat, 15 Apr 2023 01:13:22 GMT
            content-length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '68'
            server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: railway
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeleteSuccess'
                - example:
                    code: 200
                    status: Ok
                    message: Successfully deleted comment!
              example:
                code: 200
                status: Ok
                message: Successfully deleted comment!
      deprecated: false
      security:
      - bearer: []
      servers:
      - url: https://mygram-api-production-09d0.up.railway.app/api/v1
        variables: {}
  /media:
    post:
      tags:
      - Media
      summary: Create Media
      operationId: CreateMedia
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateMediaRequest'
              - example:
                  name: Instagram
            example:
              name: Instagram
        required: true
      responses:
        '200':
          description: OK
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Sat, 15 Apr 2023 01:21:55 GMT
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '315'
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                - $ref: '#/components/schemas/CreateMediaSuccess'
                - example:
                    code: 200
                    status: Ok
                    message: Successfully created media!
                    data:
                      ID: b493361e-fabd-4e7a-8e9e-e8990a50a3a4
                      name: Instagram
                      social_media_url: Instagram.com
                      UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
                      CreatedAt: 2023-04-15T08:21:55.858331+07:00
                      UpdatedAt: 2023-04-15T08:21:55.858331+07:00
              example:
                code: 200
                status: Ok
                message: Successfully created media!
                data:
                  ID: b493361e-fabd-4e7a-8e9e-e8990a50a3a4
                  name: Instagram
                  social_media_url: Instagram.com
                  UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
                  CreatedAt: 2023-04-15T08:21:55.858331+07:00
                  UpdatedAt: 2023-04-15T08:21:55.858331+07:00
        '400':
          description: Bad Request
          headers:
            content-type:
              content:
                text/plain:
                  schema:
                    type: string
                  example: application/json; charset=utf-8
            date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Sat, 15 Apr 2023 01:24:14 GMT
            content-length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '228'
            server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: railway
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/CreateMediaFailed1'
                - example:
                    code: 400
                    status: Error
                    message: Create Media Failed!
                    errors:
                    - "ERROR: Invalid Social_media_url (Key: 'CreateMediaRequest.Social_media_url' Error:Field validation for 'Social_media_url' failed on the 'required' tag)!"
              example:
                code: 400
                status: Error
                message: Create Media Failed!
                errors:
                - "ERROR: Invalid Social_media_url (Key: 'CreateMediaRequest.Social_media_url' Error:Field validation for 'Social_media_url' failed on the 'required' tag)!"
      deprecated: false
      security:
      - bearer: []
      servers:
      - url: https://mygram-api-production-09d0.up.railway.app/api/v1
        variables: {}
    get:
      tags:
      - Media
      summary: Get All
      operationId: GetAll2
      parameters: []
      responses:
        '401':
          description: Unauthorized
          headers:
            content-type:
              content:
                text/plain:
                  schema:
                    type: string
                  example: application/json; charset=utf-8
            date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Sat, 15 Apr 2023 01:14:41 GMT
            content-length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '51'
            server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: railway
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/GetAllFailed1'
                - example:
                    message: You are not logged in
                    status: fail
              example:
                message: You are not logged in
                status: fail
        '200':
          description: OK
          headers:
            content-type:
              content:
                text/plain:
                  schema:
                    type: string
                  example: application/json; charset=utf-8
            date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Sat, 15 Apr 2023 01:24:52 GMT
            content-length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '778'
            server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: railway
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/GetAllSuccess2'
                - example:
                    code: 200
                    status: Ok
                    message: Successfully fetch all media data!
                    data:
                    - ID: d94823d1-dfb5-4f99-9a8d-3972f358398c
                      name: Instagram
                      social_media_url: Instagram.com
                      UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
                      CreatedAt: 2023-04-15T01:24:45.994296Z
                      UpdatedAt: 2023-04-15T01:24:45.994296Z
                    - ID: ed123944-75f7-4097-8e98-6cee08604c43
                      name: Instagram
                      social_media_url: Instagram.com
                      UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
                      CreatedAt: 2023-04-15T01:24:47.261494Z
                      UpdatedAt: 2023-04-15T01:24:47.261494Z
                    - ID: c9f5fce6-6a27-42f1-8dd6-f0d29ae2cee6
                      name: Instagram
                      social_media_url: Instagram.com
                      UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
                      CreatedAt: 2023-04-15T01:24:49.066043Z
                      UpdatedAt: 2023-04-15T01:24:49.066043Z
              example:
                code: 200
                status: Ok
                message: Successfully fetch all media data!
                data:
                - ID: d94823d1-dfb5-4f99-9a8d-3972f358398c
                  name: Instagram
                  social_media_url: Instagram.com
                  UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
                  CreatedAt: 2023-04-15T01:24:45.994296Z
                  UpdatedAt: 2023-04-15T01:24:45.994296Z
                - ID: ed123944-75f7-4097-8e98-6cee08604c43
                  name: Instagram
                  social_media_url: Instagram.com
                  UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
                  CreatedAt: 2023-04-15T01:24:47.261494Z
                  UpdatedAt: 2023-04-15T01:24:47.261494Z
                - ID: c9f5fce6-6a27-42f1-8dd6-f0d29ae2cee6
                  name: Instagram
                  social_media_url: Instagram.com
                  UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
                  CreatedAt: 2023-04-15T01:24:49.066043Z
                  UpdatedAt: 2023-04-15T01:24:49.066043Z
      deprecated: false
      servers:
      - url: https://mygram-api-production-09d0.up.railway.app/api/v1
        variables: {}
  /{id}:
    get:
      tags:
      - Media
      summary: Get One
      operationId: GetOne2
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: edcc3b8b-b856-47b6-9197-64cf19107fcf
      responses:
        '400':
          description: Bad Request
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Fri, 14 Apr 2023 22:54:14 GMT
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '93'
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                - $ref: '#/components/schemas/GetOneFailed1'
                - example:
                    code: 400
                    status: Bad Request
                    message: media not found
                    errors:
                    - record not found
              example:
                code: 400
                status: Bad Request
                message: media not found
                errors:
                - record not found
        '200':
          description: OK
          headers:
            content-type:
              content:
                text/plain:
                  schema:
                    type: string
                  example: application/json; charset=utf-8
            date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Sat, 15 Apr 2023 01:25:59 GMT
            content-length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '308'
            server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: railway
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/GetOneSuccess2'
                - example:
                    code: 200
                    status: Ok
                    message: Successfully fetch media data!
                    data:
                      ID: d94823d1-dfb5-4f99-9a8d-3972f358398c
                      name: Instagram
                      social_media_url: Instagram.com
                      UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
                      CreatedAt: 2023-04-15T01:24:45.994296Z
                      UpdatedAt: 2023-04-15T01:24:45.994296Z
              example:
                code: 200
                status: Ok
                message: Successfully fetch media data!
                data:
                  ID: d94823d1-dfb5-4f99-9a8d-3972f358398c
                  name: Instagram
                  social_media_url: Instagram.com
                  UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
                  CreatedAt: 2023-04-15T01:24:45.994296Z
                  UpdatedAt: 2023-04-15T01:24:45.994296Z
      deprecated: false
      security:
      - bearer: []
      servers:
      - url: http://localhost:8888/api/v1/media
        variables: {}
    delete:
      tags:
      - Media
      summary: Delete Media
      operationId: DeleteMedia
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: edcc3b8b-b856-47b6-9197-64cf19107fcf
      responses:
        '403':
          description: Forbidden
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Fri, 14 Apr 2023 23:52:40 GMT
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '89'
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                - $ref: '#/components/schemas/AccessDenied1'
                - example:
                    message: 'Access Denied: You are not authorized to modify this data !'
                    status: fail
              example:
                message: 'Access Denied: You are not authorized to modify this data !'
                status: fail
        '200':
          description: OK
          headers:
            content-type:
              content:
                text/plain:
                  schema:
                    type: string
                  example: application/json; charset=utf-8
            date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Sat, 15 Apr 2023 01:28:00 GMT
            content-length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '66'
            server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: railway
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeleteMediaSuccess'
                - example:
                    code: 200
                    status: Ok
                    message: Successfully deleted media!
              example:
                code: 200
                status: Ok
                message: Successfully deleted media!
      deprecated: false
      security:
      - bearer: []
      servers:
      - url: http://localhost:8888/api/v1/media
        variables: {}
  /:
    put:
      tags:
      - Media
      summary: Update Media
      operationId: UpdateMedia
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateMediaRequest'
              - example:
                  name: Instagram updated
                  social_media_url: Instagram.com
            example:
              name: Instagram updated
              social_media_url: Instagram.com
        required: true
      responses:
        '200':
          description: OK
          headers:
            content-type:
              content:
                text/plain:
                  schema:
                    type: string
                  example: application/json; charset=utf-8
            date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Sat, 15 Apr 2023 01:26:57 GMT
            content-length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '316'
            server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: railway
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/UpdateSuccess'
                - example:
                    code: 200
                    status: Ok
                    message: Successfully updated media!
                    data:
                      ID: d94823d1-dfb5-4f99-9a8d-3972f358398c
                      name: Instagram updated
                      social_media_url: Instagram.com
                      UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
                      CreatedAt: 2023-04-15T01:24:45.994296Z
                      UpdatedAt: 2023-04-15T01:26:57.052110462Z
              example:
                code: 200
                status: Ok
                message: Successfully updated media!
                data:
                  ID: d94823d1-dfb5-4f99-9a8d-3972f358398c
                  name: Instagram updated
                  social_media_url: Instagram.com
                  UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
                  CreatedAt: 2023-04-15T01:24:45.994296Z
                  UpdatedAt: 2023-04-15T01:26:57.052110462Z
      deprecated: false
components:
  schemas:
    RegisterRequest:
      title: RegisterRequest
      required:
      - username
      - email
      - password
      - age
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
        age:
          type: integer
          format: int32
      example:
        username: hyrezaalf
        email: hyrezaalf@gmail.com
        password: rahasia
        age: 22
    RegisterSuccess:
      title: RegisterSuccess
      required:
      - code
      - status
      - message
      - data
      type: object
      properties:
        code:
          type: integer
          format: int32
        status:
          type: string
        message:
          type: string
        data:
          $ref: '#/components/schemas/Data'
      example:
        code: 200
        status: Ok
        message: Successfully created user!
        data:
          id: d6391d94-19fa-4c61-87fa-f6e46cae9e27
          username: hyrezaalf
          email: hyrezaalf@gmail.com
          age: 22
          created_at: 2023-04-15T00:52:55.311075394Z
          updated_at: 2023-04-15T00:52:55.311075394Z
    Data:
      title: Data
      required:
      - id
      - username
      - email
      - age
      - created_at
      - updated_at
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        email:
          type: string
        age:
          type: integer
          format: int32
        created_at:
          type: string
        updated_at:
          type: string
      example:
        id: d6391d94-19fa-4c61-87fa-f6e46cae9e27
        username: hyrezaalf
        email: hyrezaalf@gmail.com
        age: 22
        created_at: 2023-04-15T00:52:55.311075394Z
        updated_at: 2023-04-15T00:52:55.311075394Z
    RegisterFailed1:
      title: RegisterFailed1
      required:
      - code
      - status
      - message
      - errors
      type: object
      properties:
        code:
          type: integer
          format: int32
        status:
          type: string
        message:
          type: string
        errors:
          type: array
          items:
            type: string
          description: ''
      example:
        code: 400
        status: Error
        message: Registration Failed!
        errors:
        - "ERROR: Invalid Password (Key: 'CreateUserRequest.Password' Error:Field validation for 'Password' failed on the 'required' tag)!"
    LoginRequest:
      title: LoginRequest
      required:
      - username
      - password
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      example:
        username: hyrezaalf
        password: rahasia
    LoginSuccess:
      title: LoginSuccess
      required:
      - code
      - status
      - message
      - data
      type: object
      properties:
        code:
          type: integer
          format: int32
        status:
          type: string
        message:
          type: string
        data:
          $ref: '#/components/schemas/Data1'
      example:
        code: 200
        status: Ok
        message: Successfully log in!
        data:
          token_type: Bearer
          token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODE1MjM2OTAsImlhdCI6MTY4MTUyMDA5MCwibmJmIjoxNjgxNTIwMDkwLCJzdWIiOiJkNjM5MWQ5NC0xOWZhLTRjNjEtODdmYS1mNmU0NmNhZTllMjcifQ.C24mO1kCjeGtkVF0NbXPZUaEtMm2KfSQQCIufnZj5JQ
    Data1:
      title: Data1
      required:
      - token_type
      - token
      type: object
      properties:
        token_type:
          type: string
        token:
          type: string
      example:
        token_type: Bearer
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODE1MjM2OTAsImlhdCI6MTY4MTUyMDA5MCwibmJmIjoxNjgxNTIwMDkwLCJzdWIiOiJkNjM5MWQ5NC0xOWZhLTRjNjEtODdmYS1mNmU0NmNhZTllMjcifQ.C24mO1kCjeGtkVF0NbXPZUaEtMm2KfSQQCIufnZj5JQ
    LoginFailed1:
      title: LoginFailed1
      required:
      - code
      - status
      - message
      type: object
      properties:
        code:
          type: integer
          format: int32
        status:
          type: string
        message:
          type: string
      example:
        code: 400
        status: Bad Request
        message: Invalid username or password
    GetUsersSuccess:
      title: GetUsersSuccess
      required:
      - code
      - status
      - message
      - data
      type: object
      properties:
        code:
          type: integer
          format: int32
        status:
          type: string
        message:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/Data'
          description: ''
      example:
        code: 200
        status: Ok
        message: Successfully fetch all user data!
        data:
        - id: d6391d94-19fa-4c61-87fa-f6e46cae9e27
          username: hyrezaalf
          email: hyrezaalf@gmail.com
          age: 22
          created_at: 2023-04-15T00:52:55.311075Z
          updated_at: 2023-04-15T00:52:55.311075Z
    CreatePhotoRequest:
      title: CreatePhotoRequest
      required:
      - title
      - caption
      - photo_url
      type: object
      properties:
        title:
          type: string
        caption:
          type: string
        photo_url:
          type: string
      example:
        title: Photo Reza 21
        caption: New Photo23as
        photo_url: New Photo Url23
    CreatePhotoUnauthorized1:
      title: CreatePhotoUnauthorized1
      required:
      - message
      - status
      type: object
      properties:
        message:
          type: string
        status:
          type: string
      example:
        message: 'invalidate token: Token is expired'
        status: fail
    CreatePhotoSuccess:
      title: CreatePhotoSuccess
      required:
      - code
      - status
      - message
      - data
      type: object
      properties:
        code:
          type: integer
          format: int32
        status:
          type: string
        message:
          type: string
        data:
          $ref: '#/components/schemas/Data3'
      example:
        code: 200
        status: Ok
        message: Successfully upload photo!
        data:
          ID: 58754883-325c-4a2e-80b8-2d9fa6f51026
          title: Photo Reza 1
          caption: New Photo23
          photo_url: New Photo Url23
          UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
          comments: null
          CreatedAt: 2023-04-15T00:59:25.21253817Z
          UpdatedAt: 2023-04-15T00:59:25.21253817Z
    Data3:
      title: Data3
      required:
      - ID
      - title
      - caption
      - photo_url
      - UserID
      - comments
      - CreatedAt
      - UpdatedAt
      type: object
      properties:
        ID:
          type: string
        title:
          type: string
        caption:
          type: string
        photo_url:
          type: string
        UserID:
          type: string
        comments:
          type: string
          nullable: true
        CreatedAt:
          type: string
        UpdatedAt:
          type: string
      example:
        ID: 58754883-325c-4a2e-80b8-2d9fa6f51026
        title: Photo Reza 1
        caption: New Photo23
        photo_url: New Photo Url23
        UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
        comments: null
        CreatedAt: 2023-04-15T00:59:25.21253817Z
        UpdatedAt: 2023-04-15T00:59:25.21253817Z
    FailedRequiredField1:
      title: FailedRequiredField1
      required:
      - code
      - status
      - message
      - errors
      type: object
      properties:
        code:
          type: integer
          format: int32
        status:
          type: string
        message:
          type: string
        errors:
          type: array
          items:
            type: string
          description: ''
      example:
        code: 400
        status: Error
        message: Upload Photo Failed!
        errors:
        - "ERROR: Invalid Title (Key: 'CreatePhotoRequest.Title' Error:Field validation for 'Title' failed on the 'required' tag)!"
    GetAllSuccess:
      title: GetAllSuccess
      required:
      - code
      - status
      - message
      - data
      type: object
      properties:
        code:
          type: integer
          format: int32
        status:
          type: string
        message:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/Data4'
          description: ''
      example:
        code: 200
        status: Ok
        message: Successfully fetch all photos data!
        data:
        - ID: 58754883-325c-4a2e-80b8-2d9fa6f51026
          title: Photo Reza 1
          caption: New Photo23
          photo_url: New Photo Url23
          UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
          comments: []
          CreatedAt: 2023-04-15T00:59:25.212538Z
          UpdatedAt: 2023-04-15T00:59:25.212538Z
    Data4:
      title: Data4
      required:
      - ID
      - title
      - caption
      - photo_url
      - UserID
      - comments
      - CreatedAt
      - UpdatedAt
      type: object
      properties:
        ID:
          type: string
        title:
          type: string
        caption:
          type: string
        photo_url:
          type: string
        UserID:
          type: string
        comments:
          type: array
          items:
            type: string
          description: ''
        CreatedAt:
          type: string
        UpdatedAt:
          type: string
      example:
        ID: 58754883-325c-4a2e-80b8-2d9fa6f51026
        title: Photo Reza 1
        caption: New Photo23
        photo_url: New Photo Url23
        UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
        comments: []
        CreatedAt: 2023-04-15T00:59:25.212538Z
        UpdatedAt: 2023-04-15T00:59:25.212538Z
    GetOneSuccess:
      title: GetOneSuccess
      required:
      - code
      - status
      - message
      - data
      type: object
      properties:
        code:
          type: integer
          format: int32
        status:
          type: string
        message:
          type: string
        data:
          $ref: '#/components/schemas/Data4'
      example:
        code: 200
        status: Ok
        message: Successfully fetch photo data!
        data:
          ID: 58754883-325c-4a2e-80b8-2d9fa6f51026
          title: Photo Reza 1
          caption: New Photo23
          photo_url: New Photo Url23
          UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
          comments: []
          CreatedAt: 2023-04-15T00:59:25.212538Z
          UpdatedAt: 2023-04-15T00:59:25.212538Z
    GetPhotoFailed1:
      title: GetPhotoFailed1
      required:
      - code
      - status
      - message
      - errors
      type: object
      properties:
        code:
          type: integer
          format: int32
        status:
          type: string
        message:
          type: string
        errors:
          type: array
          items:
            type: string
          description: ''
      example:
        code: 400
        status: Bad Request
        message: photos not found
        errors:
        - 'ERROR: invalid input syntax for type uuid: "58754883-325c-4a2e-80b8-2d9fa6f510212" (SQLSTATE 22P02)'
    UpdatePhotoRequest:
      title: UpdatePhotoRequest
      required:
      - caption
      - photo_url
      type: object
      properties:
        caption:
          type: string
        photo_url:
          type: string
      example:
        caption: caption kok ilang
        photo_url: New Photo Url23 updated
    UpdatePhotoSuccess:
      title: UpdatePhotoSuccess
      required:
      - code
      - status
      - message
      - data
      type: object
      properties:
        code:
          type: integer
          format: int32
        status:
          type: string
        message:
          type: string
        data:
          $ref: '#/components/schemas/Data4'
      example:
        code: 200
        status: Ok
        message: Successfully updated photo!
        data:
          ID: 58754883-325c-4a2e-80b8-2d9fa6f51026
          title: New Photo23 updated v2
          caption: caption kok ilang
          photo_url: New Photo Url23 updated
          UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
          comments: []
          CreatedAt: 2023-04-15T00:59:25.212538Z
          UpdatedAt: 2023-04-15T01:04:34.492954426Z
    UpdatePhotoRequiredField1:
      title: UpdatePhotoRequiredField1
      required:
      - code
      - status
      - message
      - errors
      type: object
      properties:
        code:
          type: integer
          format: int32
        status:
          type: string
        message:
          type: string
        errors:
          type: array
          items:
            type: string
          description: ''
      example:
        code: 400
        status: Error
        message: Update Photo Failed!
        errors:
        - "ERROR: Invalid Title (Key: 'UpdatePhotoRequest.Title' Error:Field validation for 'Title' failed on the 'required' tag)!"
    DeleteFailedAccessDenied1:
      title: DeleteFailedAccessDenied1
      required:
      - message
      - status
      type: object
      properties:
        message:
          type: string
        status:
          type: string
      example:
        message: 'Access Denied: You are not authorized to modify this data !'
        status: fail
    DeleteSuccess:
      title: DeleteSuccess
      required:
      - code
      - status
      - message
      type: object
      properties:
        code:
          type: integer
          format: int32
        status:
          type: string
        message:
          type: string
      example:
        code: 200
        status: Ok
        message: Successfully deleted photo!
    CreateCommentRequest:
      title: CreateCommentRequest
      required:
      - photo_id
      type: object
      properties:
        photo_id:
          type: string
      example:
        photo_id: 9be2d12f-587c-4710-b5ce-e72eef4b2d08
    CreateCommentSuccess:
      title: CreateCommentSuccess
      required:
      - code
      - status
      - message
      - data
      type: object
      properties:
        code:
          type: integer
          format: int32
        status:
          type: string
        message:
          type: string
        data:
          $ref: '#/components/schemas/Data7'
      example:
        code: 200
        status: Ok
        message: Successfully created comment!
        data:
          ID: 8b7a676d-02c8-4317-81a3-d0354673404d
          UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
          PhotoID: 9be2d12f-587c-4710-b5ce-e72eef4b2d08
          message: Mantap bro
          CreatedAt: 2023-04-15T01:08:30.733654355Z
          UpdatedAt: 2023-04-15T01:08:30.733654355Z
    Data7:
      title: Data7
      required:
      - ID
      - UserID
      - PhotoID
      - message
      - CreatedAt
      - UpdatedAt
      type: object
      properties:
        ID:
          type: string
        UserID:
          type: string
        PhotoID:
          type: string
        message:
          type: string
        CreatedAt:
          type: string
        UpdatedAt:
          type: string
      example:
        ID: 8b7a676d-02c8-4317-81a3-d0354673404d
        UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
        PhotoID: 9be2d12f-587c-4710-b5ce-e72eef4b2d08
        message: Mantap bro
        CreatedAt: 2023-04-15T01:08:30.733654355Z
        UpdatedAt: 2023-04-15T01:08:30.733654355Z
    CreateCommentFailedRequireField1:
      title: CreateCommentFailedRequireField1
      required:
      - code
      - status
      - message
      - errors
      type: object
      properties:
        code:
          type: integer
          format: int32
        status:
          type: string
        message:
          type: string
        errors:
          type: array
          items:
            type: string
          description: ''
      example:
        code: 400
        status: Error
        message: Comment Failed!
        errors:
        - "ERROR: Invalid PhotoId (Key: 'CreateCommentRequest.PhotoId' Error:Field validation for 'PhotoId' failed on the 'required' tag)!"
        - "ERROR: Invalid Message (Key: 'CreateCommentRequest.Message' Error:Field validation for 'Message' failed on the 'required' tag)!"
    GetAllSuccess1:
      title: GetAllSuccess1
      required:
      - code
      - status
      - message
      - data
      type: object
      properties:
        code:
          type: integer
          format: int32
        status:
          type: string
        message:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/Data7'
          description: ''
      example:
        code: 200
        status: Ok
        message: Successfully fetched comments!
        data:
        - ID: 8b7a676d-02c8-4317-81a3-d0354673404d
          UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
          PhotoID: 9be2d12f-587c-4710-b5ce-e72eef4b2d08
          message: Mantap bro
          CreatedAt: 2023-04-15T01:08:30.733654Z
          UpdatedAt: 2023-04-15T01:08:30.733654Z
    GetOneSuccess1:
      title: GetOneSuccess1
      required:
      - code
      - status
      - message
      - data
      type: object
      properties:
        code:
          type: integer
          format: int32
        status:
          type: string
        message:
          type: string
        data:
          $ref: '#/components/schemas/Data7'
      example:
        code: 200
        status: Ok
        message: Successfully fetched comment!
        data:
          ID: 8b7a676d-02c8-4317-81a3-d0354673404d
          UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
          PhotoID: 9be2d12f-587c-4710-b5ce-e72eef4b2d08
          message: Mantap bro
          CreatedAt: 2023-04-15T01:08:30.733654Z
          UpdatedAt: 2023-04-15T01:08:30.733654Z
    NotFound1:
      title: NotFound1
      required:
      - code
      - status
      - message
      - errors
      type: object
      properties:
        code:
          type: integer
          format: int32
        status:
          type: string
        message:
          type: string
        errors:
          type: array
          items:
            type: string
          description: ''
      example:
        code: 404
        status: Not Found
        message: Comment not found!
        errors:
        - comment not found
    UpdateCommentRequest:
      title: UpdateCommentRequest
      required:
      - message
      type: object
      properties:
        message:
          type: string
      example:
        message: Keren cuy lanjutkan :)
    AccessDenied1:
      title: AccessDenied1
      required:
      - message
      - status
      type: object
      properties:
        message:
          type: string
        status:
          type: string
      example:
        message: 'Access Denied: You are not authorized to modify this data !'
        status: fail
    UpdateCommentSuccess:
      title: UpdateCommentSuccess
      required:
      - code
      - status
      - message
      - data
      type: object
      properties:
        code:
          type: integer
          format: int32
        status:
          type: string
        message:
          type: string
        data:
          $ref: '#/components/schemas/Data7'
      example:
        code: 200
        status: Ok
        message: Successfully updated comment!
        data:
          ID: 8b7a676d-02c8-4317-81a3-d0354673404d
          UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
          PhotoID: 9be2d12f-587c-4710-b5ce-e72eef4b2d08
          message: Keren cuy lanjutkan :)
          CreatedAt: 2023-04-15T01:08:30.733654Z
          UpdatedAt: 2023-04-15T01:12:41.597429246Z
    CreateMediaRequest:
      title: CreateMediaRequest
      required:
      - name
      type: object
      properties:
        name:
          type: string
      example:
        name: Instagram
    CreateMediaSuccess:
      title: CreateMediaSuccess
      required:
      - code
      - status
      - message
      - data
      type: object
      properties:
        code:
          type: integer
          format: int32
        status:
          type: string
        message:
          type: string
        data:
          $ref: '#/components/schemas/Data11'
      example:
        code: 200
        status: Ok
        message: Successfully created media!
        data:
          ID: b493361e-fabd-4e7a-8e9e-e8990a50a3a4
          name: Instagram
          social_media_url: Instagram.com
          UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
          CreatedAt: 2023-04-15T08:21:55.858331+07:00
          UpdatedAt: 2023-04-15T08:21:55.858331+07:00
    Data11:
      title: Data11
      required:
      - ID
      - name
      - social_media_url
      - UserID
      - CreatedAt
      - UpdatedAt
      type: object
      properties:
        ID:
          type: string
        name:
          type: string
        social_media_url:
          type: string
        UserID:
          type: string
        CreatedAt:
          type: string
        UpdatedAt:
          type: string
      example:
        ID: b493361e-fabd-4e7a-8e9e-e8990a50a3a4
        name: Instagram
        social_media_url: Instagram.com
        UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
        CreatedAt: 2023-04-15T08:21:55.858331+07:00
        UpdatedAt: 2023-04-15T08:21:55.858331+07:00
    CreateMediaFailed1:
      title: CreateMediaFailed1
      required:
      - code
      - status
      - message
      - errors
      type: object
      properties:
        code:
          type: integer
          format: int32
        status:
          type: string
        message:
          type: string
        errors:
          type: array
          items:
            type: string
          description: ''
      example:
        code: 400
        status: Error
        message: Create Media Failed!
        errors:
        - "ERROR: Invalid Social_media_url (Key: 'CreateMediaRequest.Social_media_url' Error:Field validation for 'Social_media_url' failed on the 'required' tag)!"
    GetAllFailed1:
      title: GetAllFailed1
      required:
      - message
      - status
      type: object
      properties:
        message:
          type: string
        status:
          type: string
      example:
        message: You are not logged in
        status: fail
    GetAllSuccess2:
      title: GetAllSuccess2
      required:
      - code
      - status
      - message
      - data
      type: object
      properties:
        code:
          type: integer
          format: int32
        status:
          type: string
        message:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/Data11'
          description: ''
      example:
        code: 200
        status: Ok
        message: Successfully fetch all media data!
        data:
        - ID: d94823d1-dfb5-4f99-9a8d-3972f358398c
          name: Instagram
          social_media_url: Instagram.com
          UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
          CreatedAt: 2023-04-15T01:24:45.994296Z
          UpdatedAt: 2023-04-15T01:24:45.994296Z
        - ID: ed123944-75f7-4097-8e98-6cee08604c43
          name: Instagram
          social_media_url: Instagram.com
          UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
          CreatedAt: 2023-04-15T01:24:47.261494Z
          UpdatedAt: 2023-04-15T01:24:47.261494Z
        - ID: c9f5fce6-6a27-42f1-8dd6-f0d29ae2cee6
          name: Instagram
          social_media_url: Instagram.com
          UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
          CreatedAt: 2023-04-15T01:24:49.066043Z
          UpdatedAt: 2023-04-15T01:24:49.066043Z
    GetOneFailed1:
      title: GetOneFailed1
      required:
      - code
      - status
      - message
      - errors
      type: object
      properties:
        code:
          type: integer
          format: int32
        status:
          type: string
        message:
          type: string
        errors:
          type: array
          items:
            type: string
          description: ''
      example:
        code: 400
        status: Bad Request
        message: media not found
        errors:
        - record not found
    GetOneSuccess2:
      title: GetOneSuccess2
      required:
      - code
      - status
      - message
      - data
      type: object
      properties:
        code:
          type: integer
          format: int32
        status:
          type: string
        message:
          type: string
        data:
          $ref: '#/components/schemas/Data11'
      example:
        code: 200
        status: Ok
        message: Successfully fetch media data!
        data:
          ID: d94823d1-dfb5-4f99-9a8d-3972f358398c
          name: Instagram
          social_media_url: Instagram.com
          UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
          CreatedAt: 2023-04-15T01:24:45.994296Z
          UpdatedAt: 2023-04-15T01:24:45.994296Z
    UpdateMediaRequest:
      title: UpdateMediaRequest
      required:
      - name
      - social_media_url
      type: object
      properties:
        name:
          type: string
        social_media_url:
          type: string
      example:
        name: Instagram updated
        social_media_url: Instagram.com
    UpdateSuccess:
      title: UpdateSuccess
      required:
      - code
      - status
      - message
      - data
      type: object
      properties:
        code:
          type: integer
          format: int32
        status:
          type: string
        message:
          type: string
        data:
          $ref: '#/components/schemas/Data11'
      example:
        code: 200
        status: Ok
        message: Successfully updated media!
        data:
          ID: d94823d1-dfb5-4f99-9a8d-3972f358398c
          name: Instagram updated
          social_media_url: Instagram.com
          UserID: d6391d94-19fa-4c61-87fa-f6e46cae9e27
          CreatedAt: 2023-04-15T01:24:45.994296Z
          UpdatedAt: 2023-04-15T01:26:57.052110462Z
    DeleteMediaSuccess:
      title: DeleteMediaSuccess
      required:
      - code
      - status
      - message
      type: object
      properties:
        code:
          type: integer
          format: int32
        status:
          type: string
        message:
          type: string
      example:
        code: 200
        status: Ok
        message: Successfully deleted media!
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
- name: Auth
- name: Photo
- name: Comment
- name: Media
